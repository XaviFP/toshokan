syntax = "proto3";

package v1;
option go_package = "github.com/XaviFP/toshokan/api/deck/proto/v1";

service DecksAPI {
  rpc GetDeck (GetDeckRequest) returns (GetDeckResponse) {}
  rpc GetDecks (GetDecksRequest) returns (GetDecksResponse) {}
  rpc CreateDeck (CreateDeckRequest) returns (CreateDeckResponse) {}
  rpc DeleteDeck (DeleteDeckRequest) returns (DeleteDeckResponse) {}

  rpc GetPopularDecks (GetPopularDecksRequest) returns (GetPopularDecksResponse) {}
}

// The request message containing the user's name.
message GetDeckRequest {
  string deck_id = 1;
  string user_id = 2;
}

message GetDeckResponse {
    Deck deck = 1;
}

message GetDecksRequest {
    repeated string deck_ids = 2;
}
  
message GetDecksResponse {
    map<string, Deck> decks = 1;
}

message CreateDeckRequest {
    Deck deck = 1;
}

message CreateDeckResponse {
    Deck deck = 1;
}

message DeleteDeckRequest {
    string id = 1;
}

message DeleteDeckResponse {}

message GetPopularDecksRequest {
    string user_id = 1; // Should be the access token instead
    Pagination pagination = 2;
}

message GetPopularDecksResponse {
    PopularDecksConnection connection = 1;
}

message PageInfo {
	bool has_previous_page = 1;
	bool has_next_page = 2;
	string start_cursor = 3;
	string end_cursor = 4;
}

message PopularDecksConnection {
    message Edge {
        string deck_id = 1;
        string cursor = 2;
    }

	repeated Edge edges = 1;
	PageInfo page_info = 2;
}

message Pagination {
    int64 last = 1;
    int64 first = 2;
    string after = 3;
    string before = 4;
}

message Deck {
    string id = 1;
    string author_id = 2;
    string title = 3;
    string description = 4;
    repeated Card cards = 5;

}

message Card {
    string id = 1;
    string deck_id = 2;
    string title = 3;
    repeated Answer possible_answers = 4;
    string explanation = 5;
}

message Answer {
    string id = 1;
    string card_id = 2;
    string text = 3;
    bool is_correct = 4;
}
